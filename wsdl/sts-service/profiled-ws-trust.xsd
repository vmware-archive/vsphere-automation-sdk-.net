<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wst="http://docs.oasis-open.org/ws-sx/ws-trust/200512" xmlns:rsa="http://www.rsa.com/names/2009/12/std-ext/WS-Trust1.4/advice" targetNamespace="http://docs.oasis-open.org/ws-sx/ws-trust/200512" elementFormDefault="qualified">
	<xs:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" schemaLocation="profiled-wsse-header.xsd"/>
	<xs:import namespace="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" schemaLocation="profiled-wss-wssecurity-utility-1.0.xsd"/>
	<xs:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="ws-addr.xsd"/>
	<xs:import namespace="http://www.rsa.com/names/2009/12/std-ext/WS-Trust1.4/advice" schemaLocation="ws-trust-1.4-extensions.xsd"/>
	<xs:element name="RequestSecurityToken" type="wst:RequestSecurityTokenType"/>
	<!-- WS-Trust Section 3.1 -->
	<xs:complexType name="RequestSecurityTokenType">
		<xs:annotation>
			<xs:documentation>
        This is a modified version of the WS-Trust RST definition setup to only allow the elements permitted by Castle in an issue / renew / validate requests.
      </xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element ref="wst:TokenType" minOccurs="0"/>
			<xs:element ref="wst:RequestType"/>
			<xs:element ref="wst:Lifetime" minOccurs="0"/>
			<xs:element ref="wst:Renewing" minOccurs="0"/>
			<xs:element ref="wst:BinaryExchange" minOccurs="0"/>
			<xs:element ref="wst:KeyType" minOccurs="0"/>
			<xs:element ref="wst:SignatureAlgorithm" minOccurs="0"/>
			<xs:element ref="wst:UseKey" minOccurs="0"/>
			<xs:element ref="wst:DelegateTo" minOccurs="0"/>
			<xs:element ref="wst:Delegatable" minOccurs="0"/>
			<xs:element ref="wst:Participants" minOccurs="0"/>
			<xs:element ref="rsa:AdviceSet" minOccurs="0"/>
			<xs:element ref="wst:ValidateTarget" minOccurs="0"/>
			<xs:element ref="wst:RenewTarget" minOccurs="0"/>
		</xs:all>
		<xs:attribute name="Context" type="xs:anyURI" use="optional"/>
		<xs:anyAttribute namespace="##any" processContents="skip"/>
	</xs:complexType>
	<xs:element name="RequestSecurityTokenResponse" type="wst:RequestSecurityTokenResponseType"/>
	<xs:complexType name="RequestSecurityTokenResponseType">
		<xs:annotation>
			<xs:documentation>
                This is a modified version of the WS-Trust RSTR definition setup to only allow the elements permitted by Castle in an issue  requests.
      </xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element ref="wst:TokenType"/>
			<xs:element ref="wst:Lifetime" minOccurs="0"/>
			<xs:element ref="wst:RequestedSecurityToken" minOccurs="0"/>
			<xs:element ref="wst:Renewing" minOccurs="0"/>
			<xs:element ref="wst:BinaryExchange" minOccurs="0"/>
			<xs:element ref="wst:KeyType" minOccurs="0"/>
			<xs:element ref="wst:SignatureAlgorithm" minOccurs="0"/>
			<xs:element ref="wst:Delegatable" minOccurs="0"/>
			<xs:element ref="wst:Status" minOccurs="0"/>
		</xs:all>
		<xs:attribute name="Context" type="xs:anyURI" use="optional"/>
	</xs:complexType>
	<xs:element name="RequestedSecurityToken" type="wst:RequestedSecurityTokenType"/>
	<xs:complexType name="RequestedSecurityTokenType">
		<xs:sequence>
			<xs:any namespace="##any" processContents="lax"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Status" type="wst:StatusType"/>
	<xs:complexType name="StatusType">
		<xs:annotation>
			<xs:documentation>
        Modified to only allow the standard status codes 
      </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="wst:StatusCodeEnum"/>
			<xs:element name="Reason" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="StatusCodeEnum">
		<xs:restriction base="xs:anyURI">
			<xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/status/valid"/>
			<xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/status/invalid"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 
       Modified definition to only allow specfic token types
     -->
	<xs:element name="TokenType" type="wst:TokenTypeEnum"/>
	<xs:simpleType name="TokenTypeEnum">
		<xs:annotation>
			<xs:documentation>
        Modified definition to only allow the supported token types.
      </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:anyURI">
			<xs:enumeration value="urn:oasis:names:tc:SAML:2.0:assertion"/>
			<xs:enumeration value="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0"/>
			<xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/RSTR/Status"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- 
       Modified definition to only allow an issue,renew and validate request types
	-->
	<xs:element name="RequestType" type="wst:RequestTypeEnum"/>
	<xs:simpleType name="RequestTypeOpenEnum">
		<xs:union memberTypes="wst:RequestTypeEnum xs:anyURI"/>
	</xs:simpleType>
	<xs:simpleType name="RequestTypeEnum">
		<xs:annotation>
			<xs:documentation>
        Modified definition to only allow the supported token types.
      </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:anyURI">
			<xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/Issue"/>
			<xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/Renew"/>
			<xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/Validate"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="Lifetime" type="wst:LifetimeType"/>
	<xs:complexType name="LifetimeType">
		<xs:sequence>
			<xs:element ref="wsu:Created" minOccurs="0"/>
			<xs:element ref="wsu:Expires" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<!--
	   Renew target
	-->
	<xs:element name="RenewTarget" type="wst:RenewTargetType"/>
	<xs:complexType name="RenewTargetType">
		<xs:sequence>
			<xs:any namespace="##other" processContents="skip"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="AllowPostdating" type="wst:AllowPostdatingType"/>
	<xs:complexType name="AllowPostdatingType"/>
	<xs:element name="Renewing" type="wst:RenewingType"/>
	<xs:complexType name="RenewingType">
		<xs:attribute name="Allow" type="xs:boolean" use="optional"/>
		<xs:attribute name="OK" type="xs:boolean" use="optional" fixed="false"/>
	</xs:complexType>
	<!-- WS-Trust Section 8.3 -->
	<xs:element name="BinaryExchange" type="wst:BinaryExchangeType"/>
	<xs:complexType name="BinaryExchangeType">
		<xs:annotation>
			<xs:documentation>
        Modified definition to only support the SSPI exchange
        See section 3.5
      </xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="ValueType" type="xs:anyURI" use="required" fixed="http://schemas.xmlsoap.org/ws/2005/02/trust/spnego"/>
				<xs:attribute name="EncodingType" type="xs:anyURI" use="required" fixed="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:element name="Issuer" type="wsa:EndpointReferenceType"/>
	<!--
	    Modified definition to allow only STS supported key types
	-->
	<xs:element name="KeyType" type="wst:KeyTypeEnum"/>
	<xs:simpleType name="KeyTypeEnum">
		<xs:annotation>
			<xs:documentation>
        Modified definition to only support Public Keys and Bearer tokens
        See section 3.6.1.1
      </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:anyURI">
			<xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/PublicKey"/>
			<xs:enumeration value="http://docs.oasis-open.org/ws-sx/ws-trust/200512/Bearer"/>
		</xs:restriction>
	</xs:simpleType>
	<!--
	    Modified definition to allow only STS supported singanture algos
	-->
	<xs:element name="SignatureAlgorithm" type="wst:SignatureAlgorithmEnum"/>
	<xs:simpleType name="SignatureAlgorithmEnum">
		<xs:annotation>
			<xs:documentation>
        Modified definition to only support the SHA1 and SHA2 signature algorithms
        See section 3.6.1.1
      </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:anyURI">
			<xs:enumeration value="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
			<xs:enumeration value="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"/>
			<xs:enumeration value="http://www.w3.org/2001/04/xmldsig-more#rsa-sha384"/>
			<xs:enumeration value="http://www.w3.org/2001/04/xmldsig-more#rsa-sha512"/>
		</xs:restriction>
	</xs:simpleType>
	<!--
	    Modified definition to allow only STS supported use key
	-->
	<xs:element name="UseKey" type="wst:UseKeyType"/>
	<xs:complexType name="UseKeyType">
		<xs:annotation>
			<xs:documentation>
        Modified definition to require an empty element with the Sig attribute.
        See section 3.6.1.1
      </xs:documentation>
		</xs:annotation>
		<xs:sequence/>
		<xs:attribute name="Sig" type="xs:anyURI" use="required"/>
	</xs:complexType>
	<!-- 
		Modified definition to restrict the contents to a UNT
     -->
	<xs:element name="DelegateTo" type="wst:DelegateToType"/>
	<xs:complexType name="DelegateToType">
		<xs:annotation>
			<xs:documentation>
        Modified definition to restrict the contents to a UNT
        See section 4.2
      </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="wsse:UsernameToken"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Delegatable" type="xs:boolean"/>
	<!-- 
		Modified definition to not support the extension types
	.-->
	<xs:element name="Participants" type="wst:ParticipantsType"/>
	<xs:complexType name="ParticipantsType">
		<xs:annotation>
			<xs:documentation>
        Modified definition to not support the extension types.
        See section 3.6.3
      </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Primary" type="wst:ParticipantType" minOccurs="0"/>
			<xs:element name="Participant" type="wst:ParticipantType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ParticipantType">
		<xs:annotation>
			<xs:documentation>
        Modified definition to restrict the contents to an endpoint reference
        See section 4.2
      </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="wsa:EndpointReference"/>
		</xs:sequence>
	</xs:complexType>
	<!-- 
		Validate Target
    -->
	<xs:element name="ValidateTarget" type="wst:ValidateTargetType"/>
	<xs:complexType name="ValidateTargetType">
		<xs:sequence>
			<xs:any namespace="##other" processContents="skip"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="RequestSecurityTokenResponseCollection" type="wst:RequestSecurityTokenResponseCollectionType"/>
	<xs:complexType name="RequestSecurityTokenResponseCollectionType">
		<xs:sequence>
			<xs:element ref="wst:RequestSecurityTokenResponse"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
